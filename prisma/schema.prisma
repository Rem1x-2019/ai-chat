// 文件路径: prisma/schema.prisma

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DATABASE_URL_UNPOOLED")
}

generator client {
  provider = "prisma-client-js"
}

// 新增：API 服务配置模型
model ApiService {
  id      String @id @default(cuid())
  name    String @unique // 服务名称，例如 "openai", "deepseek"
  apiKey  String @db.Text
  baseUrl String? @db.Text // 例如 "https://api.deepseek.com/v1"
  model   String? // 模型名称，例如 "deepseek-chat"
  
  // 用于统计使用次数
  usageCount Int @default(0)
}

// 用户模型
model User {
  id           String    @id @default(cuid())
  email        String?   @unique // 用于登录用户
  name         String?
  image        String?
  isGuest      Boolean   @default(false)
  createdAt    DateTime  @default(now())
  sessions     Session[]
  limits       UserLimit[]
  
  // 新增：用户的消息额度限制，默认为 20
  messageLimit Int @default(20)
}

// 会话模型
model Session {
  id        String    @id @default(cuid())
  title     String
  userId    String
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  messages  Message[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

// 消息模型
model Message {
  id        String   @id @default(cuid())
  role      String
  content   String   @db.Text
  sessionId String
  session   Session  @relation(fields: [sessionId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
}

// 用户每日限制模型
model UserLimit {
  userId String
  date   DateTime @db.Date
  count  Int      @default(0)
  
  // `limit` 字段已被移除，将使用 User.messageLimit
  
  user   User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@id([userId, date])
}


// 系统配置模型
model SystemConfig {
  id    String @id @default(cuid())
  key   String @unique
  value String
}