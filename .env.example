# ==============================================================================
# AI Chat - 环境变量示例文件
# ==============================================================================
#
# 使用说明:
# 1. 复制此文件并重命名为 `.env` -> `cp .env.example .env`
# 2. 填入下方的所有必需值。
#
# 注意: `.env` 文件包含了敏感信息，切勿将其提交到 Git 仓库。
# `.gitignore` 文件已配置忽略 `.env`。

# --- 数据库配置 (必需) ---
# 用于连接您的 PostgreSQL 数据库。推荐使用 Neon (https://neon.tech/)。
# 部署到 Vercel 时，Vercel 会自动提供。本地开发时，可使用 Docker 或 Neon 的 URL。
# 
# 连接池 URL (用于应用运行时)
DATABASE_URL="postgres://user:password@subdomain.neon.tech/dbname?sslmode=require"
# 直连 URL (用于数据库迁移)
DATABASE_URL_UNPOOLED="postgresql://user:password@subdomain.neon.tech/dbname?sslmode=require"


# --- AI 模型配置 (至少需要一种) ---
# 您可以只配置 DeepSeek，也可以都配置上。
# 
# DeepSeek 或其他兼容 OpenAI 接口的托管模型
DEEPSEEK_API_KEY="your-deepseek-or-compatible-api-key"
DEEPSEEK_API_URL="https://your-api-endpoint.com/v1/chat/completions"
DEEPSEEK_MODEL_NAME="DeepSeek-R1" # 您要使用的模型名称

# OpenAI (即使不主要使用，也需要一个虚拟值以确保构建成功)
OPENAI_API_KEY="sk-dummy-key-for-build-process"


# --- 应用认证与安全配置 (必需) ---
# 
# NextAuth.js 需要一个密钥来加密会话数据 (JWT)。
# 您可以使用 `openssl rand -base64 32` 命令在终端生成一个。
NEXTAUTH_SECRET="your-super-secret-string-for-nextauth"

# 您应用部署后的完整公开 URL。
# 本地开发时: http://localhost:3000
# 线上部署时: https://your-app-name.vercel.app
NEXTAUTH_URL="http://localhost:3000"


# --- GitHub OAuth 登录 (可选) ---
# 如果您想启用 GitHub 登录，请在 GitHub > Settings > Developer settings > OAuth Apps 创建应用。
# 将下面的回调 URL 添加到您的 GitHub OAuth App 配置中。
# 本地: http://localhost:3000/api/auth/callback/github
# 线上: https://your-app-name.vercel.app/api/auth/callback/github
GITHUB_ID=""
GITHUB_SECRET=""


# --- 功能配置 (可选) ---
# 
# 每位用户每日可发送的消息数量上限。
DEFAULT_DAILY_LIMIT=20

# 管理员邮箱列表，多个邮箱用逗号分隔，无空格。
# 用于访问 /admin 页面。
ADMIN_EMAILS="admin1@example.com,admin2@example.com"